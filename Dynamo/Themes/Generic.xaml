<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:model="clr-namespace:Dynamo.Model"
                    xmlns:v="clr-namespace:Dynamo.View"
                    xmlns:ngv="clr-namespace:NodeGraph.View;assembly=NodeGraph"
                    xmlns:convert="clr-namespace:Dynamo.Converters"
                    xmlns:i="http://schemas.microsoft.com/xaml/behaviors">

    <SolidColorBrush x:Key="PaperColour" Color="#111111"/>
    <SolidColorBrush x:Key="BackgroundColour" Color="#202020"/>
    <SolidColorBrush x:Key="LozengeButtonColour" Color="#323232"/>
    <SolidColorBrush x:Key="BorderColour" Color="#414141"/>
    <SolidColorBrush x:Key="TextColour" Color="#AFAFAF"/>
    <SolidColorBrush x:Key="TextStrongColour" Color="#FFFFFF"/>
    <SolidColorBrush x:Key="ButtonHoverColour" Color="#5177B2"/>
    <SolidColorBrush x:Key="StickyNodeColour" Color="#FFFF99"/>

    <Path x:Key="LockedIcon" Data="M12 2a4 4 0 0 1 4 4v2h2.5A1.5 1.5 0 0 1 20 9.5v11a1.5 1.5 0 0 1-1.5 1.5h-13A1.5 1.5 0 0 1 4 20.5v-11A1.5 1.5 0 0 1 5.5 8H8V6a4 4 0 0 1 4-4Zm0 11.5a1.5 1.5 0 1 0 0 3 1.5 1.5 0 0 0 0-3ZM12 4a2 2 0 0 0-2 2v2h4V6a2 2 0 0 0-2-2Z" Fill="#212121" />
    <Path x:Key="FlowchartIcon" Data="M13.999,2.003C9.58,2.003 6.001,5.581 6.001,10C6.001,14.419 9.58,17.998 13.999,17.998C18.418,17.998 22.003,14.419 22.003,10C22.003,5.581 18.418,2.003 13.999,2.003ZM4.926,5.82C3.076,7.339 2.003,9.605 2.003,12.003C2.003,16.416 5.581,20 10,20C10.635,19.995 11.265,19.918 11.88,19.765C10.118,19.38 8.491,18.525 7.173,17.29C5.22,16.245 3.999,14.214 3.999,12.003C4.004,11.704 4.029,11.406 4.072,11.109C4.029,10.743 4.004,10.371 3.999,10C4.004,8.555 4.321,7.129 4.926,5.82Z" />

    <convert:ImageSharpToWpfConverter x:Key="ImageSharpToWpfConverter"/>
    <convert:ColourConverter x:Key="ColourConverter"/>

    <Style x:Key="AppbarButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource LozengeButtonColour}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{StaticResource TextStrongColour}"/>
        <Setter Property="Padding" Value="8 2 8 3"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        Background="{TemplateBinding Background}"
                        CornerRadius="4"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        Margin="{TemplateBinding Margin}"
                        Padding="{TemplateBinding Padding}">
                        <ContentPresenter/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource ButtonHoverColour}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="LockCheckBox" TargetType="{x:Type CheckBox}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="{StaticResource LozengeButtonColour}"/>
        <Setter Property="Opacity" Value="0.8"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid Background="Transparent" SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Border Background="Transparent" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Path Data="{Binding Source={StaticResource LockedIcon}, Path=Data}" Fill="{TemplateBinding Background}" Stretch="UniformToFill"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Background" Value="{StaticResource TextColour}"/>
                            <Setter Property="Opacity" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{StaticResource ButtonHoverColour}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExposeCheckBox" TargetType="{x:Type CheckBox}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="{StaticResource TextColour}"/>
        <Setter Property="Opacity" Value="0.5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid Background="Transparent" SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Border Background="Transparent" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Viewbox Width="13" Height="13" Margin="0 1 0 0">
                                <Path Data="{Binding Source={StaticResource FlowchartIcon}, Path=Data}" Fill="{TemplateBinding Background}" Stretch="UniformToFill"/>
                            </Viewbox>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Background" Value="{StaticResource TextColour}"/>
                            <Setter Property="Opacity" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{StaticResource ButtonHoverColour}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type v:ViewportPanelView}">
        <Setter Property="Background" Value="{StaticResource PaperColour}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type v:ViewportPanelView}">
                    <Grid Background="{TemplateBinding Background}">
                        <Image Source="{Binding Path=Model.DisplayedImage, Converter={StaticResource ImageSharpToWpfConverter}}"/>
                        <CheckBox Style="{StaticResource LockCheckBox}" IsChecked="{Binding Path=Model.Locked, Mode=TwoWay}" Width="24" Height="24" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="4"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type v:PropertyPanelView}">
        <Setter Property="Background" Value="{StaticResource BackgroundColour}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="6 4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type v:PropertyPanelView}">
                    <Border Background="{TemplateBinding Background}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Border Grid.Row="0" BorderThickness="0 0 0 1" BorderBrush="Gray">
                                <TextBlock Margin="10 5" FontWeight="Bold" FontSize="24" Text="{Binding Model.DisplayedNode.Header}" Foreground="White"></TextBlock>
                            </Border>
                            <Grid Grid.Row="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <v:PropertyPanelPropertiesContainer
                                    Visibility="Visible"
                                    Grid.Column="0"
                                    IsInput="False"
                                    ShowPort="False"
                                    HorizontalAlignment="Left"
                                    Padding="6 4"
                                    ItemsSource="{Binding PortViewModels}"/>
                            </Grid>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PropertyStyle" TargetType="{x:Type ngv:PortView}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ngv:PortView}">
                    <Grid Height="25">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="Column1Width" Width="*"/>
                        </Grid.ColumnDefinitions>
                        <ContentControl
                            x:Name="TextAndEditor"
                            Grid.Column="0"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock
                                    x:Name="PART_Header"
                                    Grid.Column="0"
                                    Text="{Binding Model.Name, Mode=TwoWay}"
                                    Focusable="True"
                                    Foreground="White"
                                    TextAlignment="Left"
                                    Margin="0 0 6 0"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Left"/>
                                <ContentPresenter
                                    x:Name="PortPropertyEditor"
                                    Grid.Column="1"
                                    Content="{TemplateBinding PropertyEditor}"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Left"
                                    Margin="0 0 4 0"/>
                                <CheckBox Grid.Column="2" x:Name="ExposeButton" Style="{StaticResource ExposeCheckBox}" IsChecked="{Binding Model.Exposed}">
                                </CheckBox>
                            </Grid>
                        </ContentControl>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="PropertyEditorVisibility" Value="Visible">
                            <Setter TargetName="PortPropertyEditor" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Model.Exposable}" Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="ExposeButton" Property="Visibility" Value="Collapsed"/>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>